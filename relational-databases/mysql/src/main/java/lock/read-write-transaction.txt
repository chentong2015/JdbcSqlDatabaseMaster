TODO: 锁住查询出来的行数据
1. REPEATABLE-READ 可重复读隔离级别
   防止幻读：Session1所操作(查询或更新)的数据范围内，不受到Session2插入数据的影响
   如果操作走索引，则把索引操作范围内的"间隙(索引会排序，出现范围)"锁住  >> 锁和Index的关系
   如果操作不走索引，则把整个表的所用行，同时把所有的间隙都给锁住
   #Session1                                 #Session2
   begin;                                    begin;
   select * form t1 where a>1 for update;
   >> ok
                                             insert into t1(b,c,d,e) values(2,5,9,"f1);
                                             由于a是自增的主键，Session1对a>1的全部范围都加了一把写锁
                                             在可重复读隔离级别下，所有结果"间隙"范围的数据都不可做更新操作，无法插入 !!
   commit;                                   commit;

   #Session1                                 #Session2
   begin;                                    begin;
   select * form t1 where c='1' for update;
   >> ok
                                             select * from t1 where a=2 for update;
                                             由于c不是走的索引，则会把全表的行都锁住，包括间隙的操作
   commit;                                   commit;

TODO: 只锁住查询出来的行数据
2. Read Committed 读可提交隔离级别
   #Session1                                 #Session2
   begin;                                    begin;
   select * form t1 where a=1 for update;
   >> ok                                     select * form t1 where a=1 for update; 阻塞
                                             select * form t1 where a=2 for update; a是主键，Session1只锁定"指定行"
                                             >> ok
   commit;                                   commit;

   #Session1                                 #Session2
   begin;                                    begin;
   select * form t1 where b=1 for update;
   >> ok                                     select * form t1 where b=1 for update; 阻塞
                                             select * form t1 where b=2 for update; b是Index锁，Session1只锁定"指定行"
                                             >> ok
   commit;                                   commit;

   #Session1                                 #Session2
   begin;                                    begin;
   select * form t1 where c=1 for update;
   >> ok                                     select * form t1 where c=1 for update; 阻塞
                                             select * form t1 where a=6 for update; c是普通字段
                                             >> ok  如果所查找的行不在Session1锁定行中，则不会阻塞
   commit;                                   commit;