TODO. 根据Size粒度范围划分
表锁: READ [LOCAL] lock + [LOW_PRIORITY] WRITE lock
> LOCK TABLES t1 READ;
> SELECT COUNT(*) FROM t1;
> SELECT COUNT(*) FROM t2; Session只能访问锁定的表, t2也需要用LOCK TABLES申明
> UNLOCK TABLES;

行锁
lock_rec_not_cap 单个行记录上的锁
lock_gap         间隙锁，锁定一个区间范围(行旁边的间隙)，但不包括记录本身。目的是为了防止同一个事务的两次当前读，造成幻读
lock_ordinary    锁定记录本身，并且锁定上下两个间隙区间范围，目的是解决幻读问题

添加行锁，数据库会排队执行线程
update product set stock=stock-1 where id=#{id} and stock > 0;